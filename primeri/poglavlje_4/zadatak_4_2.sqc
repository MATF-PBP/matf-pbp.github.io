#include <stdio.h>
#include <stdlib.h>
#include <string.h>

EXEC SQL INCLUDE SQLCA;

EXEC SQL BEGIN DECLARE SECTION;
char stmt[255];
sqlint32 godina;
char sifra[11], 
     naziv[51], 
     pocetak_prijave[11], 
     kraj_prijave[11], 
     tip[3];
EXEC SQL END DECLARE SECTION;

void is_error(const char* err)
{
    if (SQLCODE < 0)
    {
        printf("Greska %d: %s\n\n", SQLCODE, err);
        exit(EXIT_FAILURE);
    }
}

int main()
{
    EXEC SQL CONNECT TO vstud USER student USING abcdef;
    is_error("Connect");

    // Kreiramo dinamicku SQL naredbu sa netipiziranim i neimenovanim parametarskim oznakama.
    // Primetimo po jedan karakter razmaka na kraju svake niske!!!
    // Ovo je vazna napomena, zato sto ce pretprocesor programskog jezika C
    // jednostavno konkatenirati date doslovne niske u jednu nisku,
    // tako da je neophodno da ostavimo karakter razmaka
    // kako ne bismo kreirali neispravnu SQL naredbu.
    sprintf(stmt, 
        "INSERT "
        "INTO   ISPITNI_ROK "
        "VALUES (?, ?, ?, ?, ?, ?)");

    // Pripremamo naredbu za izvrsavanje
    EXEC SQL 
        PREPARE PREP_NAREDBA 
        FROM    :stmt;
    is_error("PREPARE");
    
    // Ucitavamo podatke za unosenje u tabelu ispitni_rok
    printf("Unesite godinu roka:\n");
    scanf("%d", &godina);

    printf("Unesite sifru roka:\n");
    scanf("%s", sifra);
    getchar(); // novi red
    
    printf("Unesite naziv roka:\n");
    // Funkcija fgets ce procitati i karakter za novi red,
    // tako da moramo da ga postavimo na terminirajucu nulu.
    fgets(naziv, sizeof(naziv), stdin);
    naziv[strcspn(naziv, "\n")] = '\0';
    
    printf("Unesite pocetak prijave roka:\n");
    scanf("%s", pocetak_prijave);

    printf("Unesite kraj prijave roka:\n");
    scanf("%s", kraj_prijave);

    printf("Unesite tip roka:\n");
    scanf("%s", tip);

    // Izvrsavamo prethodno pripremljenu naredbu 
    // koriscenjem maticnih promenljivih
    EXEC SQL 
        EXECUTE PREP_NAREDBA 
        USING   :godina, 
                :sifra, 
                :naziv, 
                :pocetak_prijave, 
                :kraj_prijave, 
                :tip;
    is_error("Execute");
    
    printf("Novi ispitni rok je uspesno unet!\n");

    EXEC SQL CONNECT RESET;
    is_error("Connect reset");

    return 0;
}