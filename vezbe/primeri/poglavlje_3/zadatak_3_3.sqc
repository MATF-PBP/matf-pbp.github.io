#include <stdio.h>
#include <stdlib.h>

EXEC SQL INCLUDE SQLCA;

EXEC SQL BEGIN DECLARE SECTION;
sqlint32 id_stud_programa;
char oznaka[11];
char naziv[201];
short id_nivoa;
short bodovi;
char zvanje[101];
struct {
   short int duzina;
   char tekst[32700];
} opis;
short ind_opis;
EXEC SQL END DECLARE SECTION;

void is_error(const char* str)
{
    if (SQLCODE < 0)
    {
        printf("SQLCODE %d: %s\n", SQLCODE, str);
        exit(EXIT_FAILURE);
    }
}

int main()
{
    // Konektujemo se na bazu podataka
    EXEC SQL CONNECT TO stud2020 USER student USING abcdef;
    is_error("Connect");
    
    // Deklarisemo kursor koji prolazi tabelom STUDIJSKIPROGRAM.
    // Primetite da upit zadovoljava ogranicenje za koriscenje pozicionirajuce UPDATE naredbe.
    EXEC SQL 
        DECLARE c_studijskiprogram CURSOR FOR 
        SELECT  ID, 
                OZNAKA, 
                NAZIV, 
                IDNIVOA, 
                OBIMESPB,
                ZVANJE,
                OPIS
        FROM    DA.STUDIJSKIPROGRAM
        FOR     UPDATE OF OBIMESPB; // Na ovaj nacin najavljujemo SUBP
                                    // da cemo vrsiti promenu kolone "OBIMESPB"
    is_error("Declare cursor c_studijskiprogram");
    
    EXEC SQL OPEN c_studijskiprogram;
    is_error("Open cursor c_studijskiprogram");
    
    printf("+---------------------------------------------------------------------------------------------------------------------------------------+\n");
    printf("|                                                           STUDIJSKI PROGRAM                                                           |\n");
    printf("+-----+------+------------------------------+----+----+------------------------------+--------------------------------------------------+\n");
    printf("|ID   |OZNAKA|NAZIV                         |NIVO|OBIM|ZVANJE                        |OPIS                                              |\n");
    printf("|-----+------+------------------------------+----+----+------------------------------+--------------------------------------------------+\n");

    for(;;)
    {
        EXEC SQL 
            FETCH   c_studijskiprogram
            INTO    :id_stud_programa, 
                    :oznaka, 
                    :naziv, 
                    :id_nivoa, 
                    :bodovi,
                    :zvanje,
                    :opis :ind_opis;
        is_error("Fetch from cursor c_studijskiprogram");

        if (SQLCODE == 100) 
        {
            break;
        }

        printf("|%-5d|%-6s|%-30.30s|%-4hd|%-4hd|%-30.30s|%-50.50s|\n", id_stud_programa, oznaka, naziv, id_nivoa, bodovi, zvanje, (ind_opis < 0) ? "NULL" : opis.tekst);
        printf("|-----+------+------------------------------+----+----+------------------------------+--------------------------------------------------+\n");
        
        // Sada mozemo da iskoristimo cinjenicu da se nalazimo na redu u kursoru za studijski program 
        // cije smo podatke ispisali iznad, pa mozemo da iskoristimo pozicionirajucu UPDATE naredbu.
        // Naravno, ovo radimo samo ako korisnik potvrdi da zeli da izmeni tekuci red.
        printf("\tDa li zelite da povecate broj ESPB za 10? [d/n] ");
        char odgovor;
        scanf("%c", &odgovor);
        getchar(); // Da bismo procitali i znak za novi red
        
        // Ukoliko korisnik zeli izmenu...
        if (odgovor == 'd')
        {
            // Izvrsavamo pozicionirajucu UPDATE naredbu
            EXEC SQL 
                UPDATE  DA.STUDIJSKIPROGRAM
                SET     OBIMESPB = OBIMESPB + 10
                WHERE   CURRENT OF c_studijskiprogram; // Na ovaj nacin kazemo da zelimo izmenu 
                                                       // nad trenutnim redom u kursoru c_studijskiprogram
            is_error("Update");
            
            // Dohvatamo azuriranu vrednost iz BP
            EXEC SQL 
                SELECT  OBIMESPB
                INTO    :bodovi
                FROM    DA.STUDIJSKIPROGRAM
                WHERE   ID = :id_stud_programa;
            is_error("Select into");
            
            printf("\tBroj bodova je sada %hd\n", bodovi);
            printf("|-----+------+------------------------------+----+----+------------------------------+--------------------------------------------------+\n");
        }
    }

    EXEC SQL CLOSE c_studijskiprogram;
    is_error("Close cursor c_studijskiprogram");

    EXEC SQL CONNECT RESET;
    is_error("Connect reset");
    
    return 0;
}
