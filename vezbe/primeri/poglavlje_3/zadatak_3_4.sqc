#include <stdio.h>
#include <stdlib.h>

EXEC SQL INCLUDE SQLCA;

EXEC SQL BEGIN DECLARE SECTION;
sqlint32 indeks;
char ime[51];
char prezime[51];
char naziv[151];
char datum[11];
EXEC SQL END DECLARE SECTION;

void is_error(const char *str)
{
    if(SQLCODE < 0)
    {
        fprintf(stderr, "Greska %d: %s\n", SQLCODE, str);

        EXEC SQL CONNECT RESET;
        exit(EXIT_FAILURE);
    }
}

int main()
{
    EXEC SQL CONNECT TO stud2020 USER student USING abcdef;
    is_error("Connect");
    
    EXEC SQL 
        DECLARE prvi_ispit CURSOR FOR 
        WITH POMOCNA AS (
            SELECT      I.INDEKS, 
                        MIN(DATPOLAGANJA) AS DATUM_PRVOG
            FROM        DA.ISPIT I JOIN
                        DA.DOSIJE D ON D.INDEKS = I.INDEKS JOIN
                        DA.STUDIJSKIPROGRAM S ON S.ID = D.IDPROGRAMA
            WHERE       S.NAZIV = 'Informatika' AND
                        OCENA > 5 AND
                        STATUS = 'o'
            GROUP BY    I.INDEKS
            HAVING      MIN(DATPOLAGANJA) IS NOT NULL
        )

        SELECT  I.INDEKS,
                (
                    SELECT  IME 
                    FROM    DA.DOSIJE D 
                    WHERE   D.INDEKS = I.INDEKS
                ), 
                (
                    SELECT  PREZIME 
                    FROM    DA.DOSIJE D 
                    WHERE   D.INDEKS = I.INDEKS
                ), 
                (
                    SELECT  NAZIV
                    FROM    DA.PREDMET P
                    WHERE   P.ID = I.IDPREDMETA
                ),
                DATPOLAGANJA
        FROM    DA.ISPIT I
        WHERE   EXISTS (
                    SELECT  *
                    FROM    POMOCNA PO 
                    WHERE   PO.INDEKS = I.INDEKS AND
                            PO.DATUM_PRVOG = I.DATPOLAGANJA
                );
    is_error("Declare cursor");
    
    EXEC SQL OPEN prvi_ispit;
    is_error("Open cursor");
    
    // Brojac obrisanih redova
    int i = 0;

    for(;;)
    {
        EXEC SQL 
            FETCH   prvi_ispit
            INTO    :indeks,
                    :ime, 
                    :prezime,
                    :naziv,
                    :datum;
        is_error("Fetch cursor");

        if (SQLCODE == 100) 
        {
            break;
        }

        printf("Brisem polaganje studenta %-15.15s %-15.15s (%d) datuma %s na predmetu %-50.50s\n", ime, prezime, indeks, datum, naziv);

        // Uvecavamo brojac za jedan
        ++i;

        EXEC SQL 
            DELETE  FROM DA.ISPIT
            WHERE   CURRENT OF prvi_ispit;  // Na ovaj nacin kazemo da zelimo da obrisemo 
                                            // trenutni red u kursoru prvi_ispit
        is_error("Delete");
    }

    printf("\n\nObrisali smo %d redova.\n", i);

    EXEC SQL CLOSE prvi_ispit;
    is_error("Close cursor");
    
    EXEC SQL CONNECT RESET;
    is_error("Connect reset");
    
    return 0;
}
