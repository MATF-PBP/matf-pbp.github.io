#include <stdio.h>
#include <stdlib.h>
#include <string.h>

EXEC SQL INCLUDE SQLCA;

EXEC SQL BEGIN DECLARE SECTION;
short sk_godina;
char oznaka_roka[21];
sqlint32 id_predmeta;
double uspesnost;
EXEC SQL END DECLARE SECTION;

void is_error(const char *str)
{
    if(SQLCODE < 0)
    {
        fprintf(stderr, "Greska %d: %s\n", SQLCODE, str);

        EXEC SQL ROLLBACK;

        EXEC SQL CONNECT RESET;
        exit(EXIT_FAILURE);
    }
}

int main() 
{
    EXEC SQL CONNECT TO stud2020 USER student USING abcdef;
    is_error("Connect");

    EXEC SQL 
        DECLARE c_statistike CURSOR WITH HOLD FOR
        SELECT      SKGODINA,
                    OZNAKAROKA,
                    IDPREDMETA,
                    SUM(
                        CASE 
                            WHEN OCENA > 5 AND STATUS='o' THEN 1.0 
                            ELSE 0.0 
                        END
                    ) / COUNT(*) * 100.0 AS USPESNOST
        FROM        DA.ISPIT I
        WHERE       NOT EXISTS (
                        SELECT  *
                        FROM    DA.STATISTIKAPOLAGANJA SP
                        WHERE   SP.SKGODINA = I.SKGODINA AND
                                SP.OZNAKAROKA = I.OZNAKAROKA AND
                                SP.IDPREDMETA = I.IDPREDMETA
                    )
        GROUP BY    SKGODINA,
                    OZNAKAROKA,
                    IDPREDMETA
        ORDER BY    IDPREDMETA ASC,
                    SKGODINA ASC,
                    OZNAKAROKA DESC;
    is_error("Declare c_statistike");
    
    EXEC SQL OPEN c_statistike;
    is_error("Open c_statistike");
    
    for (;;) 
    {
        EXEC SQL 
            FETCH   c_statistike
            INTO    :sk_godina,
                    :oznaka_roka,
                    :id_predmeta,
                    :uspesnost;
        is_error("Fetch c_statistike");
        
        if (SQLCODE == 100)
        {
            break;
        }
        
        EXEC SQL
            INSERT  INTO DA.STATISTIKAPOLAGANJA
            VALUES  (:sk_godina, :oznaka_roka, :id_predmeta, NULL);
        is_error("Insert");
        
        EXEC SQL SAVEPOINT tacka_cuvanja ON ROLLBACK RETAIN CURSORS;
        is_error("Savepoint");
        
        EXEC SQL 
            UPDATE  DA.STATISTIKAPOLAGANJA
            SET     USPESNOST = :uspesnost
            WHERE   SKGODINA = :sk_godina AND
                    OZNAKAROKA = :oznaka_roka AND
                    IDPREDMETA = :id_predmeta;
        is_error("Update");
        
        printf("\nUneta je statistika: %5.2lf%% uspesnosti za predmet %d u roku %s %hd.\n"
            "Da li zelite da ponistite unos statistike? [d/n] ", uspesnost, id_predmeta, oznaka_roka, sk_godina);
        char odgovor = getchar();
        getchar(); // novi red
        
        if (odgovor == 'd' || odgovor == 'D')
        {
            EXEC SQL
                ROLLBACK TO SAVEPOINT tacka_cuvanja;
            is_error("Rollback to savepoint");
            
            printf("Statistika o polaganju nije sacuvana, ali je zabelezeno da je izracunata!\n");
        }
        
        EXEC SQL COMMIT;
        is_error("Commit");
    }
    
    EXEC SQL CLOSE c_statistike;
    is_error("Close c_statistike");
    
    EXEC SQL COMMIT;
    is_error("Commit");
    
    EXEC SQL CONNECT RESET;
    is_error("Connect reset");
    
    return 0;
}
