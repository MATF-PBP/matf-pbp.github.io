#include <stdio.h>
#include <stdlib.h>

EXEC SQL INCLUDE SQLCA;

EXEC SQL BEGIN DECLARE SECTION;
sqlint32 id_predmeta;
short espb;
char naziv[201];
EXEC SQL END DECLARE SECTION;

void is_error(const char *str)
{
    if(SQLCODE < 0)
    {
        fprintf(stderr, "Greska %d: %s\n", SQLCODE, str);

        EXEC SQL ROLLBACK;

        EXEC SQL CONNECT RESET;
        exit(EXIT_FAILURE);
    }
}

int main()
{
    EXEC SQL CONNECT TO stud2020 USER student USING abcdef;
    is_error("Connect");

    EXEC SQL 
        DECLARE neobradjeni_predmeti CURSOR WITH HOLD FOR 
        SELECT  ID,
                RTRIM(NAZIV),
                ESPB
        FROM    DA.PREDMET
        WHERE   ID NOT IN (
                    SELECT  IDPREDMETA
                    FROM    DA.OBRADJENIPREDMETI
                )
        FOR     UPDATE OF ESPB;
    is_error("Declare");

    EXEC SQL OPEN neobradjeni_predmeti;
    is_error("Open");

    unsigned broj_obradjenih = 0;
    
    for(;;)
    {
        EXEC SQL 
            FETCH   neobradjeni_predmeti 
            INTO    :id_predmeta,
                    :naziv,
                    :espb;
        is_error("Fetch");

        if(SQLCODE == 100)
        {
            break;
        }

        printf("\nPredmet %s ima broj bodova: %hd.\n"
            "Da li zelite da povecate broj bodova za 1? [d/n] ", naziv, espb);
            
        char odgovor_od_korisnika;
        scanf("%c", &odgovor_od_korisnika);
        
        getchar(); // Za citanje novog reda

        if (odgovor_od_korisnika == 'd')
        {
            EXEC SQL 
                UPDATE  DA.PREDMET
                SET     ESPB = ESPB + 1
                WHERE   CURRENT OF neobradjeni_predmeti;
            is_error("Update");            
            
            printf("Podaci su uspesno azurirani\n");
        }
        
        // Ubelezavamo u BP da smo obradili tekuci predmet
        EXEC SQL
            INSERT  INTO DA.OBRADJENIPREDMETI
            VALUES  (:id_predmeta);
        is_error("Insert into");
        
        // Uvecavamo broj obradjenih predmeta        
        ++broj_obradjenih;
        
        // Proveravamo da li je kraj jedne transakcije
        if (broj_obradjenih == 5)
        {
            EXEC SQL COMMIT;
            is_error("Commit");
            
            printf("\nTRANSAKCIJA JE IZVRSENA\n"
                "Da li zelite da nastavite obradu? [d/n] ");
            char odgovor_od_korisnika;
            scanf("%c", &odgovor_od_korisnika);
            
            getchar(); // Za citanje novog reda

            if (odgovor_od_korisnika == 'n')
            {
                break;
            }

            broj_obradjenih = 0; 
        }
    }

    EXEC SQL CLOSE neobradjeni_predmeti;
    is_error("Close");

    EXEC SQL COMMIT;
    is_error("Potvrdjivanje izmena");
    
    EXEC SQL CONNECT RESET;
    is_error("Connect reset");

    return 0;
}