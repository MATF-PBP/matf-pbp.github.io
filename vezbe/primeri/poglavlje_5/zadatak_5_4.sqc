#include <stdio.h>
#include <stdlib.h>

EXEC SQL INCLUDE SQLCA;

EXEC SQL BEGIN DECLARE SECTION;
sqlint32 hCourseId;
short hCourseESPB;
char hCourseName[201];
EXEC SQL END DECLARE SECTION;

void checkSQL(const char *str) {
    if(SQLCODE < 0) {
        fprintf(stderr, "Greska %d: %s\n", SQLCODE, str);

        EXEC SQL ROLLBACK;

        EXEC SQL CONNECT RESET;
        exit(EXIT_FAILURE);
    }
}

int main() {
    EXEC SQL CONNECT TO stud2020 USER student USING abcdef;
    checkSQL("Connect");

    EXEC SQL 
        DECLARE cUnprocessedCourses CURSOR WITH HOLD FOR 
        SELECT  ID,
                RTRIM(NAZIV),
                ESPB
        FROM    DA.PREDMET
        WHERE   ID NOT IN (
                    SELECT  IDPREDMETA
                    FROM    DA.OBRADJENIPREDMETI
                )
        FOR     UPDATE OF ESPB;
    checkSQL("Declare");

    EXEC SQL OPEN cUnprocessedCourses;
    checkSQL("Open");

    unsigned broj_obradjenih = 0;
    
    for(;;) {
        EXEC SQL 
            FETCH   cUnprocessedCourses 
            INTO    :hCourseId,
                    :hCourseName,
                    :hCourseESPB;
        checkSQL("Fetch");

        if(SQLCODE == 100) {
            break;
        }

        printf("\nPredmet %s ima broj bodova: %hd.\n"
            "Da li zelite da povecate broj bodova za 1? [d/n] ", hCourseName, hCourseESPB);
            
        char userResponse;
        scanf("%c", &userResponse);
        getchar(); // Za citanje novog reda

        if (userResponse == 'd') {
            EXEC SQL 
                UPDATE  DA.PREDMET
                SET     ESPB = ESPB + 1
                WHERE   CURRENT OF cUnprocessedCourses;
            checkSQL("Update");            
            
            printf("Podaci su uspesno azurirani\n");
        }
        
        // Ubelezavamo u BP da smo obradili tekuci predmet
        EXEC SQL
            INSERT  INTO DA.OBRADJENIPREDMETI
            VALUES  (:hCourseId);
        checkSQL("Insert into");
        
        // Uvecavamo broj obradjenih predmeta        
        ++broj_obradjenih;
        
        // Proveravamo da li je kraj jedne transakcije
        if (broj_obradjenih == 5) {
            EXEC SQL COMMIT;
            checkSQL("Commit");
            
            printf("\nTRANSAKCIJA JE IZVRSENA\n"
                "Da li zelite da nastavite obradu? [d/n] ");
            char userResponse;
            scanf("%c", &userResponse);
            
            getchar(); // Za citanje novog reda

            if (userResponse == 'n') {
                break;
            }

            broj_obradjenih = 0; 
        }
    }

    EXEC SQL CLOSE cUnprocessedCourses;
    checkSQL("Close");

    EXEC SQL COMMIT;
    checkSQL("Potvrdjivanje izmena");
    
    EXEC SQL CONNECT RESET;
    checkSQL("Connect reset");

    return 0;
}