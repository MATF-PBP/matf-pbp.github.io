#include <stdio.h>
#include <stdlib.h>
#include <sql.h>

EXEC SQL INCLUDE SQLCA;

EXEC SQL BEGIN DECLARE SECTION;
sqlint32 id_stud_programa;
char oznaka[11];
char naziv[51];

char naredba[255];
short id_nivoa;
EXEC SQL END DECLARE SECTION;

void is_error(const char *str)
{
    // `SQLCODE` je makro koji se razvija u `sqlca.sqlcode`
    if(sqlca.sqlcode < 0)
    {
        char Buffer[1024];
        short BufferSize = sizeof(Buffer);
        short LineWidth = 50;
        sqlaintp(Buffer, BufferSize, LineWidth, &sqlca);

        printf("Greska %d: %s\n\n", sqlca.sqlcode, str);
        printf("%s\n", Buffer);
        exit(EXIT_FAILURE);
    }
}

int main()
{
    EXEC SQL CONNECT TO stud2020 USER student USING abcdef;
    is_error("Connect");
    
    // Kreiranje tekstualne reprezentacije naredbe sa tipiziranom parametarskom oznakom.
    // Primetite da se na kraju svakog reda nalazi karakter razmaka.
    // Ovo je neophodno zato sto ce C kompilator samo nadovezati ove niske,
    // pa ako ne navedemo razmake, onda ce "slepiti" nazive kolona i klauza.
    sprintf(naredba, 
        "SELECT ID, "
        "       OZNAKA, "
        "       RTRIM(NAZIV) "
        "FROM   DA.STUDIJSKIPROGRAM "
        "WHERE  IDNIVOA = CAST(? AS SMALLINT)");
    
    // Prevodjenje tekstualne reprezentacije naredbe u pripremljenu naredbu
    EXEC SQL 
        PREPARE PREP_NAREDBA 
        FROM    :naredba;
    is_error("Prepare");

    // S obzirom da koristimo SELECT naredbu, ne mozemo da koristimo EXECUTE.
    // Umesto toga, moramo da deklarisemo kursor na osnovu pripremljene naredbe.
    // Ne navodimo dvotacku ispred PREP_NAREDBA jer je to identifikator, a ne maticna promenljiva.
    EXEC SQL 
        DECLARE studijskiprogrami CURSOR FOR 
        PREP_NAREDBA;
    is_error("Declare cursor");

    printf("Unesite identifikator nivoa studija: ");
    scanf("%hd", &id_nivoa);

    // Otvaranje kursora i navodjenje vrednosti parametarske oznake
    EXEC SQL 
        OPEN    studijskiprogrami 
        USING   :id_nivoa;
    is_error("Open cursor");
    
    printf("+-------------------------------------------+\n");
    printf("|             STUDIJSKI PROGRAM             |\n");
    printf("+-----+------+------------------------------+\n");
    printf("|ID   |OZNAKA|NAZIV                         |\n");
    printf("|-----+------+------------------------------+\n");

    for(;;)
    {
        EXEC SQL 
            FETCH   studijskiprogrami
            INTO    :id_stud_programa, 
                    :oznaka, 
                    :naziv;
        is_error("Fetch cursor");

        if (SQLCODE == 100)
        {
            break;
        }

        printf("|%-5d|%-6s|%30.30s|\n", id_stud_programa, oznaka, naziv);
        printf("+-----+------+------------------------------+\n");
    }
    
    printf("+-----+------+------------------------------+\n");

    EXEC SQL CLOSE studijskiprogrami;
    is_error("Close cursor");

    EXEC SQL CONNECT RESET;
    is_error("Connect reset");
    
    return 0;
}